package org.stroganov.wsClient;

import jakarta.jws.HandlerChain;
import jakarta.xml.ws.*;

import javax.xml.namespace.QName;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 */
@WebServiceClient(name = "AdminServiceImplService", targetNamespace = "http://ws.stroganov.org/", wsdlLocation = "http://127.0.0.1:8082/LibraryService/adminServices?wsdl")
@HandlerChain(file = "clientHandler.xml")
public class AdminServiceImplService
        extends Service {

    private final static URL ADMINSERVICEIMPLSERVICE_WSDL_LOCATION;
    private final static WebServiceException ADMINSERVICEIMPLSERVICE_EXCEPTION;
    private final static QName ADMINSERVICEIMPLSERVICE_QNAME = new QName("http://ws.stroganov.org/", "AdminServiceImplService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://127.0.0.1:8082/LibraryService/adminServices?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        ADMINSERVICEIMPLSERVICE_WSDL_LOCATION = url;
        ADMINSERVICEIMPLSERVICE_EXCEPTION = e;
    }

    public AdminServiceImplService() {
        super(__getWsdlLocation(), ADMINSERVICEIMPLSERVICE_QNAME);
    }

    public AdminServiceImplService(WebServiceFeature... features) {
        super(__getWsdlLocation(), ADMINSERVICEIMPLSERVICE_QNAME, features);
    }

    public AdminServiceImplService(URL wsdlLocation) {
        super(wsdlLocation, ADMINSERVICEIMPLSERVICE_QNAME);
    }

    public AdminServiceImplService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, ADMINSERVICEIMPLSERVICE_QNAME, features);
    }

    public AdminServiceImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AdminServiceImplService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    private static URL __getWsdlLocation() {
        if (ADMINSERVICEIMPLSERVICE_EXCEPTION != null) {
            throw ADMINSERVICEIMPLSERVICE_EXCEPTION;
        }
        return ADMINSERVICEIMPLSERVICE_WSDL_LOCATION;
    }

    /**
     * @return returns AdminService
     */
    @WebEndpoint(name = "AdminServiceImplPort")
    public AdminServiceClient getAdminServiceImplPort() {
        return super.getPort(new QName("http://ws.stroganov.org/", "AdminServiceImplPort"), AdminServiceClient.class);
    }

    /**
     * @param features A list of  to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns AdminService
     */
    @WebEndpoint(name = "AdminServiceImplPort")
    public AdminServiceClient getAdminServiceImplPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://ws.stroganov.org/", "AdminServiceImplPort"), AdminServiceClient.class, features);
    }

}
