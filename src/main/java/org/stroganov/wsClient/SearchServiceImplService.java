
package org.stroganov.wsClient;

import jakarta.jws.HandlerChain;
import jakarta.xml.ws.*;

import javax.xml.namespace.QName;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 */
@WebServiceClient(name = "SearchServiceImplService", targetNamespace = "http://ws.stroganov.org/", wsdlLocation = "http://127.0.0.1:8082/LibraryService/searchServices?wsdl")
@HandlerChain(file = "clientHandler.xml")
public class SearchServiceImplService
        extends Service {

    private static final URL SEARCHSERVICEIMPLSERVICE_WSDL_LOCATION;
    private static final WebServiceException SEARCHSERVICEIMPLSERVICE_EXCEPTION;
    private static final QName SEARCHSERVICEIMPLSERVICE_QNAME = new QName("http://ws.stroganov.org/", "SearchServiceImplService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://127.0.0.1:8082/LibraryService/searchServices?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        SEARCHSERVICEIMPLSERVICE_WSDL_LOCATION = url;
        SEARCHSERVICEIMPLSERVICE_EXCEPTION = e;
    }

    public SearchServiceImplService() {
        super(__getWsdlLocation(), SEARCHSERVICEIMPLSERVICE_QNAME);
    }

    public SearchServiceImplService(WebServiceFeature... features) {
        super(__getWsdlLocation(), SEARCHSERVICEIMPLSERVICE_QNAME, features);
    }

    public SearchServiceImplService(URL wsdlLocation) {
        super(wsdlLocation, SEARCHSERVICEIMPLSERVICE_QNAME);
    }

    public SearchServiceImplService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SEARCHSERVICEIMPLSERVICE_QNAME, features);
    }

    public SearchServiceImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SearchServiceImplService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * @return returns SearchService
     */
    @WebEndpoint(name = "SearchServiceImplPort")
    public SearchServiceClient getSearchServiceImplPort() {
        return super.getPort(new QName("http://ws.stroganov.org/", "SearchServiceImplPort"), SearchServiceClient.class);
    }

    /**
     * @param features A list of  to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns SearchService
     */
    @WebEndpoint(name = "SearchServiceImplPort")
    public SearchServiceClient getSearchServiceImplPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://ws.stroganov.org/", "SearchServiceImplPort"), SearchServiceClient.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SEARCHSERVICEIMPLSERVICE_EXCEPTION != null) {
            throw SEARCHSERVICEIMPLSERVICE_EXCEPTION;
        }
        return SEARCHSERVICEIMPLSERVICE_WSDL_LOCATION;
    }

}
