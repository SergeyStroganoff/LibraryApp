
package org.stroganov.wsClient;

import jakarta.jws.WebService;
import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;

import javax.xml.namespace.QName;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 */
@WebService(name = "LibraryServerServiceImplService", targetNamespace = "http://ws.stroganov.org/", wsdlLocation = "http://127.0.0.1:8082/LibraryService/services?wsdl")
public class LibraryServerServiceImplService
        extends Service {

    private final static URL LIBRARYSERVERSERVICEIMPLSERVICE_WSDL_LOCATION;
    private final static WebServiceException LIBRARYSERVERSERVICEIMPLSERVICE_EXCEPTION;
    private final static QName LIBRARYSERVERSERVICEIMPLSERVICE_QNAME = new QName("http://ws.stroganov.org/", "LibraryServerServiceImplService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://127.0.0.1:8082/LibraryService/services?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        LIBRARYSERVERSERVICEIMPLSERVICE_WSDL_LOCATION = url;
        LIBRARYSERVERSERVICEIMPLSERVICE_EXCEPTION = e;
    }

    public LibraryServerServiceImplService() {
        super(__getWsdlLocation(), LIBRARYSERVERSERVICEIMPLSERVICE_QNAME);
    }

    public LibraryServerServiceImplService(WebServiceFeature... features) {
        super(__getWsdlLocation(), LIBRARYSERVERSERVICEIMPLSERVICE_QNAME, features);
    }

    public LibraryServerServiceImplService(URL wsdlLocation) {
        super(wsdlLocation, LIBRARYSERVERSERVICEIMPLSERVICE_QNAME);
    }

    public LibraryServerServiceImplService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, LIBRARYSERVERSERVICEIMPLSERVICE_QNAME, features);
    }

    public LibraryServerServiceImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public LibraryServerServiceImplService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * @return returns LibraryService
     */
    @WebEndpoint(name = "LibraryServerServiceImplPort")
    public LibraryService getLibraryServerServiceImplPort() {
        return super.getPort(new QName("http://ws.stroganov.org/", "LibraryServerServiceImplPort"), LibraryService.class);
    }

    /**
     * @param features A list of  to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns LibraryService
     */
    @WebEndpoint(name = "LibraryServerServiceImplPort")
    public LibraryService getLibraryServerServiceImplPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://ws.stroganov.org/", "LibraryServerServiceImplPort"), LibraryService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (LIBRARYSERVERSERVICEIMPLSERVICE_EXCEPTION != null) {
            throw LIBRARYSERVERSERVICEIMPLSERVICE_EXCEPTION;
        }
        return LIBRARYSERVERSERVICEIMPLSERVICE_WSDL_LOCATION;
    }

}
