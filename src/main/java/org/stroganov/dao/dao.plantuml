@startuml

title __DAO's Class Diagram__\n

  namespace org.stroganov {
    namespace dao {
      class org.stroganov.dao.DAOFactory {
          {static} - ERROR_PARAMETER_MESSAGE : String
          {static} - REALIZATION_EXCEPTION_MESSAGE : String
          {static} + getLibraryDAO()
      }
    }
  }
  

  namespace org.stroganov {
    namespace dao {
      enum DAOType {
        H2DATABASE
        JSON
      }
    }
  }
  

  namespace org.stroganov {
    namespace dao {
      class org.stroganov.dao.JsonDataSource {
          ~ authorsList : List<Author>
          ~ bookList : List<Book>
          ~ bookMarkListList : List<BookMark>
          ~ userList : List<User>
          {static} - instance : JsonDataSource
          + addAuthor()
          + addBook()
          + addBookList()
          + addBookMark()
          + addUser()
          + blockUser()
          + deleteAuthor()
          + deleteBook()
          + deleteBookMark()
          + deleteUser()
          + findBook()
          + findUser()
          {static} + getInstance()
          + unblockUser()
          - JsonDataSource()
      }
    }
  }
  

  namespace org.stroganov {
    namespace dao {
      interface org.stroganov.dao.LibraryDAO {
          {abstract} + addAuthor()
          {abstract} + addBook()
          {abstract} + addBookList()
          {abstract} + addBookMark()
          {abstract} + addUser()
          {abstract} + blockUser()
          {abstract} + deleteAuthor()
          {abstract} + deleteBook()
          {abstract} + deleteBookMark()
          {abstract} + deleteUser()
          {abstract} + findBook()
          {abstract} + findUser()
          {abstract} + unblockUser()
      }
    }
  }
  

  org.stroganov.dao.JsonDataSource .up.|> org.stroganov.dao.LibraryDAO


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
